{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["dayjs","extend","duration","relativeTime","initialState","numerator","denominator","sentence","days","months","years","App","useState","state","setState","updateState","useCallback","e","current","target","name","value","updateSentence","parseInt","totalDays","totalMonths","newSentenceDays","Math","floor","newSentenceMonths","console","log","newSentence","className","htmlFor","type","min","max","size","maxLength","id","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0d1a2af.chunk.js","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport './App.scss';\n// import * as dayjs from 'dayjs'\nimport dayjs from 'dayjs';\n// import 'dayjs/locale/zh-cn' // import locale\n\n\n// var dayjs = require('dayjs');\n// var duration: any = require('dayjs/plugin/duration').\nimport duration from 'dayjs/plugin/duration';\nimport relativeTime from 'dayjs/plugin/relativeTime';\ndayjs.extend(duration);\ndayjs.extend(relativeTime)\n\n\ninterface ISentence {\n  days: number,\n  months: number,\n  years: number\n}\n\ninterface IState {\n  numerator: number,\n  denominator: number,\n  sentence: ISentence\n}\n\nconst initialState: IState = {\n  numerator: 1,\n  denominator: 6,\n  sentence: {\n    days: 20,\n    months: 0,\n    years: 0\n  }\n}\n\nconst App = () => {\n  const [state, setState] = useState(initialState);\n  const updateState = useCallback(e => setState(current => ({ ...current, [e.target.name]: e.target.value })), []);\n  const updateSentence = useCallback(e => setState(current => ({ ...current, sentence: {\n    ...current.sentence,\n    [e.target.name]: parseInt(e.target.value) || 0\n  }})), []);\n  // const newSentence = dayjs.duration({\n  //   days: state.sentence.days,\n  //   months: state.sentence.months,\n  //   years: state.sentence.years\n  // });\n  const totalDays = state.sentence.days + state.sentence.months*30 + state.sentence.years*365;\n  const totalMonths = state.sentence.months + state.sentence.years*12;\n  const newSentenceDays = Math.floor(totalDays*state.numerator/state.denominator);\n  const newSentenceMonths = totalMonths*state.numerator/state.denominator;\n  console.log(52, totalDays, newSentenceDays);\n  // const newSentence = dayjs.duration(newSentenceDays, 'days');\n  const newSentence = { years: 0, months: 0, days: 0 };\n  // newSentence.years = Math.floor(newSentenceDays/365);\n  // newSentence.months = Math.floor((newSentenceDays - newSentence.years*365)/30);\n  // newSentence.days = newSentenceDays - newSentence.years*365 - newSentence.months*30;\n  newSentence.years = Math.floor(newSentenceMonths/12);\n  newSentence.months = Math.floor(newSentenceMonths) % 12;\n  console.log(55, newSentenceMonths, Math.floor(newSentenceMonths));\n  // newSentence.days = Math.floor((newSentenceMonths - Math.floor(newSentenceMonths))*30 + state.sentence.days);\n  newSentence.days = Math.floor(((totalMonths*state.numerator % state.denominator)*30 + state.sentence.days)*state.numerator/state.denominator);\n  console.log(58, newSentence);\n  return (\n    <div className=\"w-100 h-100 d-flex justify-content-center align-items-center\">\n      <div className=\"p-4 d-flex flex-column card\">\n\n        <div className=\"mb-2 card\">\n          <div className=\"card-header\">\n            Sentença\n          </div>\n          <div className=\"card-body\">\n\n            <div className=\"row\">\n              <label className=\"col-sm-5 col-form-label\" htmlFor=\"sentence-days\">Dias: </label>\n              <div className=\"col-sm-4\">\n                <input name=\"days\" type=\"number\" min=\"0\" max=\"31\" size={2} maxLength={2}\n                  className=\"ml-1 form-control\" id=\"sentence-days\"\n                  value={state.sentence.days} onChange={updateSentence} />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <label className=\"col-sm-5 col-form-label\" htmlFor=\"sentence-months\">Meses: </label>\n              <div className=\"col-sm-4\">\n                <input name=\"months\" type=\"number\" min=\"0\" max=\"12\" size={2} maxLength={2}\n                  className=\"ml-1 form-control\" id=\"sentence-months\"\n                  value={state.sentence.months} onChange={updateSentence} />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <label className=\"col-sm-5 col-form-label\" htmlFor=\"sentence-years\">Anos: </label>\n              <div className=\"col-sm-4\">\n                <input name=\"years\" type=\"number\" min=\"0\" size={3} maxLength={3}\n                  className=\"ml-1 form-control\" id=\"sentence-years\"\n                  value={state.sentence.years} onChange={updateSentence} />\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n        <div className=\"mb-2 card\">\n          <div className=\"card-header\">\n            Fração\n          </div>\n          <div className=\"card-body\">\n\n            <div className=\"row\">\n              <label className=\"col-sm-7 col-form-label\" htmlFor=\"fraction-numerator\">Numerador: </label>\n              <div className=\"col-sm-4\">\n                <input name=\"numerator\" type=\"number\" min=\"0\" size={3} maxLength={3}\n                  className=\"ml-1 form-control\" id=\"fraction-numerator\"\n                  value={state.numerator} onChange={updateState} />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <label className=\"col-sm-7 col-form-label\" htmlFor=\"fraction-denominator\">Denominador: </label>\n              <div className=\"col-sm-4\">\n                <input name=\"denominator\" type=\"number\" min=\"0\" size={3} maxLength={3}\n                  className=\"ml-1 form-control\" id=\"fraction-denominator\"\n                  value={state.denominator} onChange={updateState} />\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n        <div className=\"mb-2 card\">\n          <div className=\"card-header\">\n            Redução de sentença:\n          </div>\n          <div className=\"card-body\">\n\n            <div className=\"row\">\n              <label className=\"col-sm-5 col-form-label\">Dias: </label>\n              <div className=\"col-sm-4\">\n                <input name=\"days\" className=\"ml-1 form-control\"\n                  value={newSentence.days}/>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <label className=\"col-sm-5 col-form-label\">Meses: </label>\n              <div className=\"col-sm-4\">\n                <input name=\"months\" className=\"ml-1 form-control\"\n                  value={newSentence.months}/>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <label className=\"col-sm-5 col-form-label\">Anos: </label>\n              <div className=\"col-sm-4\">\n                <input name=\"years\" className=\"ml-1 form-control\"\n                  value={newSentence.years}/>\n              </div>\n            </div>\n\n          </div>\n        </div>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}